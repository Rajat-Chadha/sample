void fun(int N, vector<int> &arr, vector<long long int> &prefix, vector<long long int> &suffix) { priority_queue<int, vector<int>, greater<int>> st1; priority_queue<int> st2; long long int val = 0; long long int sz=2*N; for (int i = 0; i < sz; i++) { st1.push(arr[i]); val += arr[i]; if (i < N - 1) continue; if (i == N - 1) prefix[i] = val; else if (i >= N) { val = val - st1.top(); prefix[i] = val; st1.pop(); } } val = 0; for (int i = 3 * N - 1; i >= N; i--) { st2.push(arr[i]); val += arr[i]; if (i > sz) continue; if (i == sz) suffix[i] = val; else if (i <= sz - 1) { val = val - st2.top(); st2.pop(); suffix[i] = val; } } } long long  colosseum(int N, vector<int> arr) { vector<long long int> prefix(3 * N, 0), suffix(3 * N, 0);